/**
 * websocket-gateway
 * Describe the weboscket endpoints
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WebsocketGateway);
  }
}(this, function(expect, WebsocketGateway) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WebsocketGateway.ClusterNodeDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClusterNodeDto', function() {
    it('should create an instance of ClusterNodeDto', function() {
      // uncomment below and update the code to test ClusterNodeDto
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be.a(WebsocketGateway.ClusterNodeDto);
    });

    it('should have the property addresses (base name: "addresses")', function() {
      // uncomment below and update the code to test the property addresses
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property annotations (base name: "annotations")', function() {
      // uncomment below and update the code to test the property annotations
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property architecture (base name: "architecture")', function() {
      // uncomment below and update the code to test the property architecture
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property conditions (base name: "conditions")', function() {
      // uncomment below and update the code to test the property conditions
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property kernelVersion (base name: "kernel_version")', function() {
      // uncomment below and update the code to test the property kernelVersion
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property kubeletVersion (base name: "kubelet_version")', function() {
      // uncomment below and update the code to test the property kubeletVersion
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property operatingSystem (base name: "operating_system")', function() {
      // uncomment below and update the code to test the property operatingSystem
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property osImage (base name: "os_image")', function() {
      // uncomment below and update the code to test the property osImage
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property pods (base name: "pods")', function() {
      // uncomment below and update the code to test the property pods
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property resourcesAllocatable (base name: "resources_allocatable")', function() {
      // uncomment below and update the code to test the property resourcesAllocatable
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property taints (base name: "taints")', function() {
      // uncomment below and update the code to test the property taints
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

    it('should have the property unschedulable (base name: "unschedulable")', function() {
      // uncomment below and update the code to test the property unschedulable
      //var instance = new WebsocketGateway.ClusterNodeDto();
      //expect(instance).to.be();
    });

  });

}));

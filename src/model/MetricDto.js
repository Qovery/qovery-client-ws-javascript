/**
 * websocket-gateway
 * Describe the weboscket endpoints
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceStatusDto from './ResourceStatusDto';
import UnitDto from './UnitDto';

/**
 * The MetricDto model module.
 * @module model/MetricDto
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class MetricDto {
    /**
     * Constructs a new <code>MetricDto</code>.
     * @alias module:model/MetricDto
     * @param current {Number} 
     * @param currentPercent {Number} 
     * @param limit {Number} 
     * @param status {module:model/ResourceStatusDto} 
     * @param unit {module:model/UnitDto} 
     */
    constructor(current, currentPercent, limit, status, unit) { 
        
        MetricDto.initialize(this, current, currentPercent, limit, status, unit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, current, currentPercent, limit, status, unit) { 
        obj['current'] = current;
        obj['current_percent'] = currentPercent;
        obj['limit'] = limit;
        obj['status'] = status;
        obj['unit'] = unit;
    }

    /**
     * Constructs a <code>MetricDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetricDto} obj Optional instance to populate.
     * @return {module:model/MetricDto} The populated <code>MetricDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetricDto();

            if (data.hasOwnProperty('current')) {
                obj['current'] = ApiClient.convertToType(data['current'], 'Number');
            }
            if (data.hasOwnProperty('current_percent')) {
                obj['current_percent'] = ApiClient.convertToType(data['current_percent'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ResourceStatusDto.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = UnitDto.constructFromObject(data['unit']);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} current
 */
MetricDto.prototype['current'] = undefined;

/**
 * @member {Number} current_percent
 */
MetricDto.prototype['current_percent'] = undefined;

/**
 * @member {Number} limit
 */
MetricDto.prototype['limit'] = undefined;

/**
 * @member {String} name
 */
MetricDto.prototype['name'] = undefined;

/**
 * @member {module:model/ResourceStatusDto} status
 */
MetricDto.prototype['status'] = undefined;

/**
 * @member {module:model/UnitDto} unit
 */
MetricDto.prototype['unit'] = undefined;






export default MetricDto;


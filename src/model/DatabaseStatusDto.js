/**
 * websocket-gateway
 * Describe the weboscket endpoints
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodStatusDto from './PodStatusDto';
import ServiceStateDto from './ServiceStateDto';

/**
 * The DatabaseStatusDto model module.
 * @module model/DatabaseStatusDto
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class DatabaseStatusDto {
    /**
     * Constructs a new <code>DatabaseStatusDto</code>.
     * @alias module:model/DatabaseStatusDto
     * @param id {String} 
     * @param pods {Array.<module:model/PodStatusDto>} 
     * @param state {module:model/ServiceStateDto} 
     */
    constructor(id, pods, state) { 
        
        DatabaseStatusDto.initialize(this, id, pods, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, pods, state) { 
        obj['id'] = id;
        obj['pods'] = pods;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>DatabaseStatusDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatabaseStatusDto} obj Optional instance to populate.
     * @return {module:model/DatabaseStatusDto} The populated <code>DatabaseStatusDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatabaseStatusDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('pods')) {
                obj['pods'] = ApiClient.convertToType(data['pods'], [PodStatusDto]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ServiceStateDto.constructFromObject(data['state']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatabaseStatusDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatabaseStatusDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DatabaseStatusDto.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['pods']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pods'])) {
                throw new Error("Expected the field `pods` to be an array in the JSON data but got " + data['pods']);
            }
            // validate the optional field `pods` (array)
            for (const item of data['pods']) {
                PodStatusDto.validateJSON(item);
            };
        }

        return true;
    }


}

DatabaseStatusDto.RequiredProperties = ["id", "pods", "state"];

/**
 * @member {String} id
 */
DatabaseStatusDto.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/PodStatusDto>} pods
 */
DatabaseStatusDto.prototype['pods'] = undefined;

/**
 * @member {module:model/ServiceStateDto} state
 */
DatabaseStatusDto.prototype['state'] = undefined;






export default DatabaseStatusDto;


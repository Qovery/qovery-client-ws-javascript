/**
 * websocket-gateway
 * Describe the weboscket endpoints
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NodePodInfoDto model module.
 * @module model/NodePodInfoDto
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class NodePodInfoDto {
    /**
     * Constructs a new <code>NodePodInfoDto</code>.
     * @alias module:model/NodePodInfoDto
     * @param imagesVersion {Object.<String, String>} 
     * @param name {String} 
     * @param namespace {String} 
     */
    constructor(imagesVersion, name, namespace) { 
        
        NodePodInfoDto.initialize(this, imagesVersion, name, namespace);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, imagesVersion, name, namespace) { 
        obj['images_version'] = imagesVersion;
        obj['name'] = name;
        obj['namespace'] = namespace;
    }

    /**
     * Constructs a <code>NodePodInfoDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodePodInfoDto} obj Optional instance to populate.
     * @return {module:model/NodePodInfoDto} The populated <code>NodePodInfoDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodePodInfoDto();

            if (data.hasOwnProperty('cpu_milli_limit')) {
                obj['cpu_milli_limit'] = ApiClient.convertToType(data['cpu_milli_limit'], 'Number');
            }
            if (data.hasOwnProperty('cpu_milli_request')) {
                obj['cpu_milli_request'] = ApiClient.convertToType(data['cpu_milli_request'], 'Number');
            }
            if (data.hasOwnProperty('environment_id')) {
                obj['environment_id'] = ApiClient.convertToType(data['environment_id'], 'String');
            }
            if (data.hasOwnProperty('images_version')) {
                obj['images_version'] = ApiClient.convertToType(data['images_version'], {'String': 'String'});
            }
            if (data.hasOwnProperty('memory_mib_limit')) {
                obj['memory_mib_limit'] = ApiClient.convertToType(data['memory_mib_limit'], 'Number');
            }
            if (data.hasOwnProperty('memory_mib_request')) {
                obj['memory_mib_request'] = ApiClient.convertToType(data['memory_mib_request'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('project_id')) {
                obj['project_id'] = ApiClient.convertToType(data['project_id'], 'String');
            }
            if (data.hasOwnProperty('service_id')) {
                obj['service_id'] = ApiClient.convertToType(data['service_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodePodInfoDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodePodInfoDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NodePodInfoDto.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['environment_id'] && !(typeof data['environment_id'] === 'string' || data['environment_id'] instanceof String)) {
            throw new Error("Expected the field `environment_id` to be a primitive type in the JSON string but got " + data['environment_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }
        // ensure the json data is a string
        if (data['project_id'] && !(typeof data['project_id'] === 'string' || data['project_id'] instanceof String)) {
            throw new Error("Expected the field `project_id` to be a primitive type in the JSON string but got " + data['project_id']);
        }
        // ensure the json data is a string
        if (data['service_id'] && !(typeof data['service_id'] === 'string' || data['service_id'] instanceof String)) {
            throw new Error("Expected the field `service_id` to be a primitive type in the JSON string but got " + data['service_id']);
        }

        return true;
    }


}

NodePodInfoDto.RequiredProperties = ["images_version", "name", "namespace"];

/**
 * @member {Number} cpu_milli_limit
 */
NodePodInfoDto.prototype['cpu_milli_limit'] = undefined;

/**
 * @member {Number} cpu_milli_request
 */
NodePodInfoDto.prototype['cpu_milli_request'] = undefined;

/**
 * @member {String} environment_id
 */
NodePodInfoDto.prototype['environment_id'] = undefined;

/**
 * @member {Object.<String, String>} images_version
 */
NodePodInfoDto.prototype['images_version'] = undefined;

/**
 * @member {Number} memory_mib_limit
 */
NodePodInfoDto.prototype['memory_mib_limit'] = undefined;

/**
 * @member {Number} memory_mib_request
 */
NodePodInfoDto.prototype['memory_mib_request'] = undefined;

/**
 * @member {String} name
 */
NodePodInfoDto.prototype['name'] = undefined;

/**
 * @member {String} namespace
 */
NodePodInfoDto.prototype['namespace'] = undefined;

/**
 * @member {String} project_id
 */
NodePodInfoDto.prototype['project_id'] = undefined;

/**
 * @member {String} service_id
 */
NodePodInfoDto.prototype['service_id'] = undefined;






export default NodePodInfoDto;


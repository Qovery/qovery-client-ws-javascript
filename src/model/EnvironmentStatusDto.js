/**
 * websocket-gateway
 * Describe the weboscket endpoints
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: erebe@erebe.eu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationStatusDto from './ApplicationStatusDto';
import DatabaseStatusDto from './DatabaseStatusDto';
import ServiceStateDto from './ServiceStateDto';

/**
 * The EnvironmentStatusDto model module.
 * @module model/EnvironmentStatusDto
 * @version $(grep &#39;version&#39; _build/openapi.yaml | head -1 | tr &#39;:&#39; &#39;\n&#39; | tail -1 | tr -d &#39; &#39;)
 */
class EnvironmentStatusDto {
    /**
     * Constructs a new <code>EnvironmentStatusDto</code>.
     * @alias module:model/EnvironmentStatusDto
     * @param applications {Array.<module:model/ApplicationStatusDto>} 
     * @param containers {Array.<module:model/ApplicationStatusDto>} 
     * @param databases {Array.<module:model/DatabaseStatusDto>} 
     * @param helms {Array.<module:model/ApplicationStatusDto>} 
     * @param id {String} 
     * @param jobs {Array.<module:model/ApplicationStatusDto>} 
     * @param projectId {String} 
     * @param state {module:model/ServiceStateDto} 
     */
    constructor(applications, containers, databases, helms, id, jobs, projectId, state) { 
        
        EnvironmentStatusDto.initialize(this, applications, containers, databases, helms, id, jobs, projectId, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applications, containers, databases, helms, id, jobs, projectId, state) { 
        obj['applications'] = applications;
        obj['containers'] = containers;
        obj['databases'] = databases;
        obj['helms'] = helms;
        obj['id'] = id;
        obj['jobs'] = jobs;
        obj['project_id'] = projectId;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>EnvironmentStatusDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentStatusDto} obj Optional instance to populate.
     * @return {module:model/EnvironmentStatusDto} The populated <code>EnvironmentStatusDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentStatusDto();

            if (data.hasOwnProperty('applications')) {
                obj['applications'] = ApiClient.convertToType(data['applications'], [ApplicationStatusDto]);
            }
            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], [ApplicationStatusDto]);
            }
            if (data.hasOwnProperty('databases')) {
                obj['databases'] = ApiClient.convertToType(data['databases'], [DatabaseStatusDto]);
            }
            if (data.hasOwnProperty('helms')) {
                obj['helms'] = ApiClient.convertToType(data['helms'], [ApplicationStatusDto]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('jobs')) {
                obj['jobs'] = ApiClient.convertToType(data['jobs'], [ApplicationStatusDto]);
            }
            if (data.hasOwnProperty('project_id')) {
                obj['project_id'] = ApiClient.convertToType(data['project_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ServiceStateDto.constructFromObject(data['state']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentStatusDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentStatusDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EnvironmentStatusDto.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['applications']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['applications'])) {
                throw new Error("Expected the field `applications` to be an array in the JSON data but got " + data['applications']);
            }
            // validate the optional field `applications` (array)
            for (const item of data['applications']) {
                ApplicationStatusDto.validateJSON(item);
            };
        }
        if (data['containers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['containers'])) {
                throw new Error("Expected the field `containers` to be an array in the JSON data but got " + data['containers']);
            }
            // validate the optional field `containers` (array)
            for (const item of data['containers']) {
                ApplicationStatusDto.validateJSON(item);
            };
        }
        if (data['databases']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['databases'])) {
                throw new Error("Expected the field `databases` to be an array in the JSON data but got " + data['databases']);
            }
            // validate the optional field `databases` (array)
            for (const item of data['databases']) {
                DatabaseStatusDto.validateJSON(item);
            };
        }
        if (data['helms']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['helms'])) {
                throw new Error("Expected the field `helms` to be an array in the JSON data but got " + data['helms']);
            }
            // validate the optional field `helms` (array)
            for (const item of data['helms']) {
                ApplicationStatusDto.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['jobs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jobs'])) {
                throw new Error("Expected the field `jobs` to be an array in the JSON data but got " + data['jobs']);
            }
            // validate the optional field `jobs` (array)
            for (const item of data['jobs']) {
                ApplicationStatusDto.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['project_id'] && !(typeof data['project_id'] === 'string' || data['project_id'] instanceof String)) {
            throw new Error("Expected the field `project_id` to be a primitive type in the JSON string but got " + data['project_id']);
        }

        return true;
    }


}

EnvironmentStatusDto.RequiredProperties = ["applications", "containers", "databases", "helms", "id", "jobs", "project_id", "state"];

/**
 * @member {Array.<module:model/ApplicationStatusDto>} applications
 */
EnvironmentStatusDto.prototype['applications'] = undefined;

/**
 * @member {Array.<module:model/ApplicationStatusDto>} containers
 */
EnvironmentStatusDto.prototype['containers'] = undefined;

/**
 * @member {Array.<module:model/DatabaseStatusDto>} databases
 */
EnvironmentStatusDto.prototype['databases'] = undefined;

/**
 * @member {Array.<module:model/ApplicationStatusDto>} helms
 */
EnvironmentStatusDto.prototype['helms'] = undefined;

/**
 * @member {String} id
 */
EnvironmentStatusDto.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/ApplicationStatusDto>} jobs
 */
EnvironmentStatusDto.prototype['jobs'] = undefined;

/**
 * @member {String} project_id
 */
EnvironmentStatusDto.prototype['project_id'] = undefined;

/**
 * @member {module:model/ServiceStateDto} state
 */
EnvironmentStatusDto.prototype['state'] = undefined;






export default EnvironmentStatusDto;

